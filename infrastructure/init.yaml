Description: >

    This template deploys a VPC, with a pair of public and private subnets spread
    across two Availabilty Zones. It deploys an Internet Gateway, with a default
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
    and default routes for them in the private subnets.

    It then deploys a highly available ECS cluster using an AutoScaling Group, with
    ECS hosts distributed across multiple Availability Zones.

    Finally, it deploys a pair of example ECS services from containers published in
    Amazon EC2 Container Registry (Amazon ECR).

Parameters:

    # Global
    EnvironmentName:
        Type: String

    TemplateBucket:
        Description: Bucket location of CF Templates
        Type: String

    # VPC 
    VpcCIDR:
        Description: VPC based network CIDR allocation
        Type: String

    PublicSubnets:
        Description: Choose which public subnets the VPC contains (holds NAT gateways)
        Type: String

    PrivateSubnets:
        Description: Choose which private subnets the VPC contains (holds services)
        Type: String

    # BastionHost
    BastionHostKeyName:
        Description: Key used for SSH access to bastion host
        Type: String
    
Resources:
    VPC:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ["", [ "https://s3.amazonaws.com/", !Ref TemplateBucket, "/infrastructure/vpc.yaml" ] ]
            Parameters:
                EnvironmentName: !Ref EnvironmentName
                VpcCIDR: !Ref VpcCIDR
                PublicSubnets: !Ref PublicSubnets
                PrivateSubnets: !Ref PrivateSubnets

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ["", [ "https://s3.amazonaws.com/", !Ref TemplateBucket, "/infrastructure/security-groups.yaml" ] ]
            Parameters:
                EnvironmentName: !Ref EnvironmentName
                VPC: !GetAtt ["VPC", "Outputs.VpcId"] 
                VpcCidr: !Ref VpcCIDR

    ALBS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ["", [ "https://s3.amazonaws.com/", !Ref TemplateBucket, "/infrastructure/load-balancers.yaml" ] ]
            Parameters:
                EnvironmentName: !Ref EnvironmentName
                Subnets: !GetAtt ["VPC", "Outputs.PublicSubnets"]
                VPC: !GetAtt ["VPC", "Outputs.VpcId"]
                ALBSecurityGroup: !GetAtt ["SecurityGroups", "Outputs.ALBSecurityGroup"]

    BastionHost:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ["", [ "https://s3.amazonaws.com/", !Ref TemplateBucket, "/infrastructure/bastion.yaml" ] ]
            Parameters:
                EnvironmentName: !Ref EnvironmentName
                VPC: !GetAtt VPC.Outputs.VpcId
                Subnets: !GetAtt VPC.Outputs.PublicSubnets
                SecurityGroup: !GetAtt SecurityGroups.Outputs.BastionHostSSHSecurityGroup
                KeyName: !Ref BastionHostKeyName
